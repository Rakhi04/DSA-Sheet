mathematical

65. https://leetcode.com/problems/add-binary/

                                                      int j=b.size()-1,i=a.size()-1,carr=0;
                                                              string res="";
                                                              while(j>=0||i>=0||carr==1){
                                                                  if(i>=0){
                                                                      carr+=a[i]-'0';
                                                                      i--;
                                                                  }
                                                                  if(j>=0){
                                                                      carr+=b[j]-'0';
                                                                      j--;
                                                                  }
                                                                  res+=carr%2+'0';
                                                                  carr/=2;
                                                              }
                                                             reverse(res.begin(),res.end()); 
                                                              return res;
                                                              
 Approach : add to carry then add carry to result.



75. https://leetcode.com/problems/the-kth-factor-of-n/


                                                          int kthFactor(int n, int k) {
                                                            int i;
                                                            for(i=1;i*i<=n;i++){
                                                                if(n%i==0 && --k==0){
                                                                    return i;
                                                                }
                                                            }
                                                            for(i-=1;i>0;i--){
                                                                if(i*i==n)continue;
                                                                if(n%i==0 && --k==0)return n/i;
                                                            }
                                                            cout<<k;
                                                            return -1;
                                                        }
                                                        
                                                        
                                                        
Approach : check till sqrt n then again sqrt n for rest n/i not i*                                                        
